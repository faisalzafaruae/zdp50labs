# Create or update a template deployment based on uris using parameter and template links
- name: Genrate SSH Key if it is not present 
  hosts: localhost
  connection: local
  gather_facts: False
  tasks:
   - stat: path="~/.ssh/id_rsa.pub"
     register: sshkeypath
   - debug: var=sshkeypath
   - name: Generate SSH Key 
     shell: ssh-keygen -q -f ~/.ssh/id_rsa -N ""
     register: sshkeytext
     when: sshkeypath.stat.exists == false

- name: Capturing value of sshkey
  hosts: localhost
  connection: local
  gather_facts: False
  tasks:
   - name: cat ssh key value
     shell: cat  ~/.ssh/id_rsa.pub
     register: sshkeytext
   - debug:
       msg: "Key Value: {{ sshkeytext.stdout }}"
     
- name: Deploying Cloud Infrastructure
  hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Deploy Hortonworks Sandbox
      azure_rm_deployment:
        deployment_name: "{{hdpvm_deployment_name}}"
        location: "{{ hdpvm_resource_location }}"
        state: present
        resource_group_name: "{{ hdpvm_resource_group }}"
        template_link:   'https://raw.githubusercontent.com/faisalzafaruae/zdp50labs/master/azure-templates/zdpsshtemplate.json'
        parameters: 
          location: 
            value: "{{ hdpvm_resource_location }}"
          resourceGroup:
            value: "{{ hdpvm_resource_group }}"
          virtualMachineName:
            value: "{{ hdpvm_machine_name }}"       
          virtualMachineSize:
            value: "{{ hdpvm_machine_size }}"
          adminUsername: 
            value: "{{ hdpvm_admin_username }}"
          virtualNetworkName: 
            value: "{{ hdpvm_vnet_name }}"
          networkInterfaceName:
            value: "{{ hdpvm_machine_networkInterface }}"
          networkSecurityGroupName:
            value: "{{ hdpvm_machine_networkSecurityGroup }}"
          adminPassword:
            value: "{{ hdpvm_admin_password }}"
          diagnosticsStorageAccountName:
            value: "zdiag"
          diagnosticsStorageAccountType:
            value: "Standard_LRS"
          diagnosticsStorageAccountId:
            value: "Microsoft.Storage/storageAccounts/zdp50demodiag297"
          addressPrefix: 
            value: "10.0.1.0/24"
          subnetName: 
            value: "default"
          subnetPrefix:
            value: "10.0.1.0/24"
          publicIpAddressName: 
            value: "{{ hdpvm_machine_publicIPName }}"
          publicIpAddressType:
            value: "Static"
          publicIpAddressSku:
            value: "Basic"
          domainNameLabel: 
            value: "{{ hdpvm_dns_name }}"
          domainFQDN:
            value: "{{ hdpvm_dns_fqdn }}"
          sshKeyData:
            value: "{{sshkeytext.stdout}}"
      register: azure

#    - name: Wait for port 22 to be ready
#      hosts: myapp
#      gather_facts: False
#      tasks:
#        - local_action: wait_for port=22 host="{{ ansible_ssh_host }}"  search_regex=OpenSSH delay=10
#    - name: Next Task after SSH is UP
#    - name: Display all variables/facts known for a host
#      debug:
#        var: hostvars[inventory_hostname]
#        verbosity: 4
    - name: Add new instance to host group
      add_host:
        hostname: "{{ item['ips'][0].public_ip }}"
        groupname: azure_vms
      with_items: "{{ azure.deployment.instances }}"

    - name: Wait for 10 minutes to build Ambari 
      pause:
        minutes: 10
    - name: Wait for 10 minutes to build Ambari 
      pause:
        minutes: 10
    - name: Wait for 5 minutes to build Ambari 
      pause:
        minutes: 5

- name: Create SSH Key Gen on HDP Sandbox
  hosts: azure_vms
  vars:
      ansible_user: "{{ hdpvm_admin_username }}"
  tasks:
    - stat: path="~/.ssh/id_rsa.pub"
      register: sshkeypathgw
    - name: create ssh-keygen on HDP Sandbox
      shell: ssh-keygen -q -f ~/.ssh/id_rsa -N ""
      when: sshkeypathgw.stat.exists == false
      
- name: Install Ansible and Git on Gateway Remote Machine
  hosts: azure_vms
  become: yes
  become_user: root
  vars:
      ansible_user: "{{ hdpvm_admin_username }}"
      ansible_sudo_pass: "{{ hdpvm_admin_password }}"
  tasks:
    - name: Installing git
      yum: name=git state=present
    - name: Installing ansible
      yum: name=ansible state=present
      
- name: Clone GIT Repo on the Gateway machine
  hosts: azure_vms
  vars:
      ansible_user: "{{ hdpvm_admin_username }}"
  tasks:
    - name: Clone GIT Repo for ZDP Installation 
      shell: git clone https://github.com/faisalzafaruae/zdp50labs.git
      
- name: Copy tar from remote machine 
  hosts: azure_vms
  vars:
      ansible_user: "{{ hdpvm_admin_username }}"
  tasks:
    - name: Copy ZDP tarfiles from remote machine 
      shell: sshpass -v -p "{{ hdpvm_admin_password }}" scp -o StrictHostKeyChecking=no zalonilab@zaloniyum.eastus.cloudapp.azure.com:/home/zalonilab/ZDP-5.0.1.tar.gz .
